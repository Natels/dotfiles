[alias]
	# better blame
	credit = blame -w -M -C -C -C
	# character diff
	diff-chars = diff -w --word-diff --word-diff-regex='[^[:space:]]'
	# shows the diff against the latest tag
	diff-release = !git diff "$(git describe --abbrev=0).."
	# diff against the upstream branch
	diff-upstream = diff @{upstream}
	# word diff
	diff-words = diff -w --word-diff
	# shows the log since the latest tag
	log-release = !git -P log "$(git describe --abbrev=0)~1.."
	# better force push
	push-force = push --force-with-lease --force-if-includes
	# push tags and associated commits atomically
	push-tags = !git push --follow-tags --atomic
	# create a tag in a way that allows for Markdown headings
	tag-md = !git tag --annotate --cleanup=whitespace --edit --message \"$1\"
	# customize git show pretty format - needs paired git function
	x-show = !git show --pretty='%C(cyan dim)%h%C(reset)%C(cyan)%d%C(reset) %C(yellow)|%C(reset) %C(bold white)%s%C(reset) %C(dim)by %an — %ar%C(reset)%n%n%C(dim)Author:%C(reset)  %an %C(dim)<%ae>%C(reset)%n         %C(dim)%ad — %ar%C(reset)%n%n%C(dim)Commit:%C(reset)  %C(cyan)%h%C(reset) — %C(cyan dim)%H%C(reset)%n         %cn %C(dim)<%ce>%C(reset)%n         %C(dim)%cd — %cr%C(reset)%n%n%C(dim)Parents:%C(reset) %C(cyan)%p%C(reset) — %C(cyan dim)%P%C(reset)%n%n%w(,4,4)%-b%-'
[branch]
	# sort branches by committer date
	sort = -committerdate
[commit]
	# the "scissors" cleanup mode is nice for entering markdown in commit messages
	cleanup = scissors
	# sign commit messages
	gpgsign = true
[core]
	# convert Windows-style line endings to *nix-style when adding to the index
	autocrlf = input
	# use VSCode as the editor
	editor = code --wait
	# use a global ignore file for files that should be ignored acress all repos
	excludesfile = ~/.gitignore-global
	# set the tab width for things like git diff to 2 spaces
	pager = less --tabs 1,3
[credential]
	# cache credentials when using non-SSH repo clones
	helper = cache --timeout=43200 # 12 hours
[diff]
	# increase the max number of files to consider when detecting renamed files
	renameLimit = 2000
	# detect renames and copies
	renames = copies
	# use a visual diff tool when using the "git difftool" command
	tool = vscode
[difftool]
	# skip prompting on every invocation of the diff tool
	prompt = false
[difftool "vscode"]
	# specify the correct arguments for VSCode to act as a visual diff tool
	cmd = code --wait --diff $LOCAL $REMOTE
[fetch]
  # before fetching, remove any branches that were deleted upstream
	prune = true
[format]
	# produce nice-looking logs
	pretty = %C(cyan dim)%h%C(reset)%C(cyan)%d%C(reset) %C(yellow)|%C(reset) %s %C(dim)by %an — %ar%C(reset)
[gpg]
	# sign with an SSH key instead of GPG
	format = ssh
[gpg "ssh"]
	# this must be configured in order to verify SSH signatures on commits
	allowedSignersFile = ~/.ssh/allowed_signers
[init]
	# use "main" as the default branch name for new repos
	defaultBranch = main
[log]
	# format dates in strict ISO-8601 format
	date = iso-strict
[merge]
	# only use fast-forward merges unless --no-ff is explicitly specified
	ff = only
[pull]
	# stop Git from automatically trying to merge outdated branches when pulling
	ff = only
[push]
	# automatically set upstream branches when pushing
	autoSetupRemote = true
	# push only the current branch to a branch of the same name
	# this means that pushing new branches upstream is as simple as "git push -u"
	default = current
[rerere]
	# enable the reuse recorded resolution feature
	enabled = true
[stash]
	# show untracked content when using "git stash show"
	showIncludeUntracked = true
	# show the actual content when using "git stash show"
	showPatch = true
	# don't show the stat summary when using "git stash show"
	showStat = false
[tag]
	# sign tag annotations
	gpgsign = true
	# sort tags by version when using "git tag" to list tags
	sort = -version:refname
[url "ssh://git@github.com/"]
	# always use SSH for GitHub URLs
	insteadOf = https://github.com/
[user]
	email = contact@erin.id.au
	name = Erin Millard
	# SSH key to use for signing (make sure this is your PUBLIC key, not private)
	signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKRaKzNLwVvprRZIs3q+ZSU1mnvyvTr/YM04/pAc9r7S

# includes must be placed last so that they can override the values above
[include]
	# include Git config from extensions
	path = ~/.dotfiles-extensions.gitconfig
