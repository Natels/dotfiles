#!/usr/bin/env bash

set -e

git --version

# Prompt immediately for sudo, and keep it alive while the install script runs
sudo -v
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

if [[ -e /opt/homebrew/bin/brew ]]; then
    echo "Homebrew already installed."
else
    echo "Installing Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

eval "$(/opt/homebrew/bin/brew shellenv)"

if hash jq 2>/dev/null; then
    echo "jq already installed."
else
    echo "Installing jq..."
    brew install jq
fi

if hash mas 2>/dev/null; then
    echo "mas already installed."
else
    echo "Installing mas..."
    brew install mas
fi

if hash op 2>/dev/null; then
    echo "1Password CLI already installed."
else
    echo "Installing 1Password CLI..."
    brew install --cask 1password-cli
fi

if [ -z "$OP_SESSION_my" ]; then
    while [ -z "$OP_EMAIL" ]; do
        echo -n "1Password email address: "
        read OP_EMAIL
    done

    while [ -z "$OP_KEY" ]; do
        echo -n "1Password secret key: "
        read OP_KEY
    done

    eval $(op signin my "$OP_EMAIL" "$OP_KEY")

    if [ -z "$OP_SESSION_my" ]; then
        echo "1Password sign in failed."
        exit 1
    fi

    echo "1Password sign in succeeded."
    echo "To persist the 1Password CLI session, run the following command:"
    echo
    printf "    export OP_SESSION_my=%q\n" "$OP_SESSION_my"
    echo
else
    echo "Existing 1Password CLI session detected."
fi

# Waiting on https://github.com/mas-cli/mas/issues/417
# if mas account >/dev/null; then
#     echo "App store sign in detected."
# else
#     op get item --account=my Apple | jq --raw-output '.details.fields[]? | select(.designation == "password") | .value' | tr -d '\n' | pbcopy
#     echo "Sign in to the app store first. Password has been copied to the clipboard."
#     mas open
#     open "x-apple.systempreferences:com.apple.preferences.AppleIDPrefPane"
#     exit 1
# fi

op get item --account=my Apple | jq --raw-output '.details.fields[]? | select(.designation == "password") | .value' | tr -d '\n' | pbcopy
echo "Sign in to the app store first. Password has been copied to the clipboard."
open "x-apple.systempreferences:com.apple.preferences.AppleIDPrefPane"

read -p "Have you signed in? [yn] " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
    exit 1
fi

if [[ -z "$GH_USER" ]]; then
    echo -n "GitHub user: "
    read GH_USER
fi

if [[ -z "$GH_USER" ]]; then
    echo "GH_USER not defined."
    exit 1
fi

DOTFILES_PATH="$HOME/grit/github.com/$GH_USER/dotfiles"

if [[ -d "$DOTFILES_PATH" ]]; then
    echo "Pulling $GH_USER/dotfiles..."
    pushd "$DOTFILES_PATH" > /dev/null
    git pull
    popd > /dev/null
else
    echo "Cloning $GH_USER/dotfiles..."
    git clone "https://github.com/$GH_USER/dotfiles.git" "$DOTFILES_PATH"
fi

if [[ -e "$HOME/dotfiles" ]]; then
    echo "Dotfiles shortcut directory already exists."
else
    ln -s "$DOTFILES_PATH" "$HOME/dotfiles"
fi

for FILE in "$HOME/dotfiles/setup/"*-*.bash; do
  source "$FILE"
done

echo "Done. System must be restarted for some changes to take effect."
